// <auto-generated>
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsBlackBoxConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":23,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"blackBox\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":38}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsBlackBoxConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":25,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsConstantZeroConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":76,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":33}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsConstantZeroConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":78,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsConstantOneConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":83,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":32}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsConstantOneConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":85,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsIdentityConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":90,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsIdentityConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":92,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsNegationConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":97,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"IsNegationConstant\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":99,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"Set\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":107,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"desired\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":15},\"Item2\":{\"Line\":1,\"Column\":22}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":35}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Result\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"Set\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":107,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"Clear\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":114,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":19}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q2\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Deutsch_Oracle\",\"Name\":\"Clear\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs\",\"Position\":{\"Item1\":114,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
#line hidden
namespace Deutsch_Oracle
{
    [SourceLocation("c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs", OperationFunctor.Body, 26, 77)]
    public partial class IsBlackBoxConstant : Operation<ICallable, Boolean>, ICallable
    {
        public IsBlackBoxConstant(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsBlackBoxConstant";
        String ICallable.FullName => "Deutsch_Oracle.IsBlackBoxConstant";
        protected ICallable<(Qubit,Qubit), QVoid> Clear
        {
            get;
            set;
        }

        protected Allocate Allocate
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected Release Release
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        public override Func<ICallable, Boolean> Body => (__in__) =>
        {
            var blackBox = __in__;
#line 30 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            var inputResult = Result.Zero;
#line 31 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            var outputResult = Result.Zero;
#line hidden
            {
#line 35 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                var qbits = Allocate.Apply(2L);
#line hidden
                System.Runtime.ExceptionServices.ExceptionDispatchInfo __arg1__ = null;
                try
                {
#line 39 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    var input = qbits[0L];
#line 40 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    var output = qbits[1L];
#line 43 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    Clear.Apply((input, output));
#line 46 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    MicrosoftQuantumIntrinsicX.Apply(input);
#line 47 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    MicrosoftQuantumIntrinsicX.Apply(output);
#line 50 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(input);
#line 51 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(output);
#line 54 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    blackBox.Apply((input, output));
#line 57 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(input);
#line 58 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(output);
#line 62 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    inputResult = MicrosoftQuantumIntrinsicM.Apply(input);
#line 63 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    outputResult = MicrosoftQuantumIntrinsicM.Apply(output);
#line 66 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                    Clear.Apply((input, output));
                }
#line hidden
                catch (Exception __arg2__)
                {
                    __arg1__ = System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(__arg2__);
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__ != null)
                    {
                        __arg1__.Throw();
                    }

#line hidden
                    Release.Apply(qbits);
                }
            }

#line 71 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            return (Result.One == inputResult);
        }

        ;
        public override void Init()
        {
            this.Clear = this.Factory.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(Clear));
            this.Allocate = this.Factory.Get<Allocate>(typeof(Microsoft.Quantum.Intrinsic.Allocate));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.Release = this.Factory.Get<Release>(typeof(Microsoft.Quantum.Intrinsic.Release));
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __dataIn(ICallable data) => new QTuple<ICallable>(data);
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, ICallable blackBox)
        {
            return __m__.Run<IsBlackBoxConstant, ICallable, Boolean>(blackBox);
        }
    }

    [SourceLocation("c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs", OperationFunctor.Body, 79, 84)]
    public partial class IsConstantZeroConstant : Operation<QVoid, Boolean>, ICallable
    {
        public IsConstantZeroConstant(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsConstantZeroConstant";
        String ICallable.FullName => "Deutsch_Oracle.IsConstantZeroConstant";
        protected ICallable<(Qubit,Qubit), QVoid> ConstantZero
        {
            get;
            set;
        }

        protected ICallable<ICallable, Boolean> IsBlackBoxConstant
        {
            get;
            set;
        }

        public override Func<QVoid, Boolean> Body => (__in__) =>
        {
#line 81 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            return IsBlackBoxConstant.Apply(ConstantZero);
        }

        ;
        public override void Init()
        {
            this.ConstantZero = this.Factory.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(ConstantZero));
            this.IsBlackBoxConstant = this.Factory.Get<ICallable<ICallable, Boolean>>(typeof(IsBlackBoxConstant));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__)
        {
            return __m__.Run<IsConstantZeroConstant, QVoid, Boolean>(QVoid.Instance);
        }
    }

    [SourceLocation("c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs", OperationFunctor.Body, 86, 91)]
    public partial class IsConstantOneConstant : Operation<QVoid, Boolean>, ICallable
    {
        public IsConstantOneConstant(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsConstantOneConstant";
        String ICallable.FullName => "Deutsch_Oracle.IsConstantOneConstant";
        protected ICallable<(Qubit,Qubit), QVoid> ConstantOne
        {
            get;
            set;
        }

        protected ICallable<ICallable, Boolean> IsBlackBoxConstant
        {
            get;
            set;
        }

        public override Func<QVoid, Boolean> Body => (__in__) =>
        {
#line 88 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            return IsBlackBoxConstant.Apply(ConstantOne);
        }

        ;
        public override void Init()
        {
            this.ConstantOne = this.Factory.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(ConstantOne));
            this.IsBlackBoxConstant = this.Factory.Get<ICallable<ICallable, Boolean>>(typeof(IsBlackBoxConstant));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__)
        {
            return __m__.Run<IsConstantOneConstant, QVoid, Boolean>(QVoid.Instance);
        }
    }

    [SourceLocation("c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs", OperationFunctor.Body, 93, 98)]
    public partial class IsIdentityConstant : Operation<QVoid, Boolean>, ICallable
    {
        public IsIdentityConstant(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsIdentityConstant";
        String ICallable.FullName => "Deutsch_Oracle.IsIdentityConstant";
        protected ICallable<(Qubit,Qubit), QVoid> Identity
        {
            get;
            set;
        }

        protected ICallable<ICallable, Boolean> IsBlackBoxConstant
        {
            get;
            set;
        }

        public override Func<QVoid, Boolean> Body => (__in__) =>
        {
#line 95 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            return IsBlackBoxConstant.Apply(Identity);
        }

        ;
        public override void Init()
        {
            this.Identity = this.Factory.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(Identity));
            this.IsBlackBoxConstant = this.Factory.Get<ICallable<ICallable, Boolean>>(typeof(IsBlackBoxConstant));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__)
        {
            return __m__.Run<IsIdentityConstant, QVoid, Boolean>(QVoid.Instance);
        }
    }

    [SourceLocation("c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs", OperationFunctor.Body, 100, 108)]
    public partial class IsNegationConstant : Operation<QVoid, Boolean>, ICallable
    {
        public IsNegationConstant(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsNegationConstant";
        String ICallable.FullName => "Deutsch_Oracle.IsNegationConstant";
        protected ICallable<ICallable, Boolean> IsBlackBoxConstant
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit), QVoid> Negation
        {
            get;
            set;
        }

        public override Func<QVoid, Boolean> Body => (__in__) =>
        {
#line 102 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            return IsBlackBoxConstant.Apply(Negation);
        }

        ;
        public override void Init()
        {
            this.IsBlackBoxConstant = this.Factory.Get<ICallable<ICallable, Boolean>>(typeof(IsBlackBoxConstant));
            this.Negation = this.Factory.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(Negation));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__)
        {
            return __m__.Run<IsNegationConstant, QVoid, Boolean>(QVoid.Instance);
        }
    }

    [SourceLocation("c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs", OperationFunctor.Body, 108, 115)]
    public partial class Set : Operation<(Result,Qubit), QVoid>, ICallable
    {
        public Set(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Result,Qubit)>, IApplyData
        {
            public In((Result,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "Set";
        String ICallable.FullName => "Deutsch_Oracle.Set";
        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        public override Func<(Result,Qubit), QVoid> Body => (__in__) =>
        {
            var (desired,q1) = __in__;
#line 110 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            if ((desired != MicrosoftQuantumIntrinsicM.Apply(q1)))
            {
#line 111 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
                MicrosoftQuantumIntrinsicX.Apply(q1);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __dataIn((Result,Qubit) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Result desired, Qubit q1)
        {
            return __m__.Run<Set, (Result,Qubit), QVoid>((desired, q1));
        }
    }

    [SourceLocation("c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs", OperationFunctor.Body, 115, -1)]
    public partial class Clear : Operation<(Qubit,Qubit), QVoid>, ICallable
    {
        public Clear(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit)>, IApplyData
        {
            public In((Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "Clear";
        String ICallable.FullName => "Deutsch_Oracle.Clear";
        protected ICallable<(Result,Qubit), QVoid> Set
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit), QVoid> Body => (__in__) =>
        {
            var (q1,q2) = __in__;
#line 117 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            Set.Apply((Result.Zero, q1));
#line 118 "c:/Users/zjjc1/Desktop/Quantum-Algorithms/Deutsch%20Oracle/Operations.qs"
            Set.Apply((Result.Zero, q2));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.Set = this.Factory.Get<ICallable<(Result,Qubit), QVoid>>(typeof(Set));
        }

        public override IApplyData __dataIn((Qubit,Qubit) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit q1, Qubit q2)
        {
            return __m__.Run<Clear, (Qubit,Qubit), QVoid>((q1, q2));
        }
    }
}